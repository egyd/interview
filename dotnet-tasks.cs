public class Task1
{
  private bool Method1()
  {
    return new byte() == new byte();
  }

  private bool Method2()
  {
    return new byte[0] == new byte[0];
  }

  public void Run()
  {
    Console.WriteLine(Method1());
    Console.WriteLine(Method2());
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task2
{
  public void Run()
  {
    var maxInt32 = int.MaxValue;

    try
    {
      Console.WriteLine(maxInt32 + 42);
    }
    catch
    {
      Console.WriteLine("OverflowException");
    }
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task3
{
  public void Run()
  {
    var i = 1;
    object obj = i;
    ++i;
    Console.WriteLine(i);
    Console.WriteLine(obj);
    Console.WriteLine((short)obj);
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task4
{
  public void Run()
  {
    var s1 = string.Format("{0}{1}", "abc", "cba");
    var s2 = "abc" + "cba";
    var s3 = "abccba";

    Console.WriteLine(s1 == s2);
    Console.WriteLine((object)s1 == (object)s2);
    Console.WriteLine(s2 == s3);
    Console.WriteLine((object)s2 == (object)s3);
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task5
{
  public void Run()
  {
    Foo<int>.Bar++;
    Console.WriteLine(Foo<double>.Bar);
  }

  private class Foo<T>
  {
    public static int Bar;
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task6
{
  public void Run()
  {
    var actions = new List<Action>();
    for (var count = 0; count < 10; count++)
    {
      actions.Add(() => Console.WriteLine(count));
    }

    foreach (var action in actions)
    {
      action();
    }
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task7
{
  public void Run()
  {
    using (var context = new UniversityContext())
    {
      var deps = context.Departments.ToList();
      foreach (var department in deps)
      {
        foreach (var course in department.Courses)
        {
          Console.WriteLine("{0}: {1}", department.Name, course.Title);
        }
      }
    };
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task8
{
  private static readonly object SyncObject = new object();

  public void Run()
  {
    lock (SyncObject)
    {
      Write();
    }
  }

  private static void Write()
  {
    lock (SyncObject)
    {
      Console.WriteLine("test");
    }
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task9
{
  public async void Run(Uri[] uris)
  {
    var tasks = new List<Task>();
    foreach (var uri in uris)
    {
      tasks.Add(DownloadFile(uri));
    }
    await Task.WhenAll(tasks);
  }

  private Task DownloadFile(Uri uri)
  {
    return Task.Run(() =>
    {
      var randomFileName = Guid.NewGuid().ToString();
      new WebClient().DownloadFile(uri, randomFileName);
    });
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class Task10
{
  public decimal CalculateTotal(Order order)
  {
    decimal itemTotal = order.GetItemTotal();
    decimal discountAmount = DiscountCalculator.CalculateDiscount(order);

    decimal taxAmount = 0.0M;

    if (order.Country == "US")
      taxAmount = FindTaxAmount(order);
    else if (order.Country == "UK")
      taxAmount = FindVatAmount(order);

    decimal total = itemTotal - discountAmount + taxAmount;

    return total;
  }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

class Task11
{
    public void Run()
    {
        new System.Threading.Thread(() => System.Console.WriteLine("Thread 1")).Start();

        System.Threading.Tasks.Task.Run(() => System.Console.WriteLine("Thread 2")).Wait();

        System.Threading.ThreadPool.QueueUserWorkItem(state => System.Console.WriteLine("Thread 3"));

        System.Console.ReadKey();
    }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

public class OrdersController : ApiController
{
    private readonly Repository _repository;

    public OrdersController()
    {
        _repository = new Repository();
    }

    public HttpResponseMessage Get(int id)
    {
        var order = _repository.Get<Order>(id);

        return order == null
            ? Request.CreateResponse(HttpStatusCode.NotFound)
            : Request.CreateResponse(HttpStatusCode.OK, order);
    }

    public HttpResponseMessage Post(Order order)
    {
        const decimal minOrder = 1000m;

        var total = order.Items.Sum(x => x.UnitPrice * x.Quantity);

        if (total < minOrder)
        {
            return Request.CreateResponse(HttpStatusCode.PreconditionFailed);
        }

        _repository.Save(order);

        SmtpHelper.SendEmail(EmailType.OrderReceived);

        return Request.CreateResponse(HttpStatusCode.Created);
    }
}

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/

/*
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
*/